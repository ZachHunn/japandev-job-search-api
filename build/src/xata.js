// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import dotenv from "dotenv";
dotenv.config();
const xataApiKey = process.env.XATA_API_KEY;
const tables = [
    {
        name: "Jobs",
        columns: [
            { name: "jobTitle", type: "string" },
            { name: "jobId", type: "int", unique: true },
            { name: "companyName", type: "string" },
            { name: "companyLocation", type: "string" },
            { name: "skills", type: "string" },
            { name: "jobLocation", type: "string" },
            { name: "minSalary", type: "int" },
            { name: "maxSalary", type: "int" },
            { name: "applicationEmail", type: "string" },
            { name: "applicationUrl", type: "string" },
            { name: "postedDate", type: "string" },
            { name: "japaneseLevel", type: "string" },
            { name: "japaneseOnly", type: "bool" },
            { name: "remote", type: "string" },
            { name: "candidateLocation", type: "string" },
            { name: "internship", type: "bool" },
            { name: "published", type: "string" },
            { name: "updated", type: "string" },
        ],
    },
];
const DatabaseClient = buildClient();
const defaultOptions = {
    databaseURL: "https://ZachHunn-s-workspace-867elc.us-west-2.xata.sh/db/japan-dev",
    apiKey: xataApiKey,
};
export class XataClient extends DatabaseClient {
    constructor(options) {
        super(Object.assign(Object.assign({}, defaultOptions), options), tables);
    }
}
let instance = undefined;
export const getXataClient = () => {
    if (instance)
        return instance;
    instance = new XataClient();
    return instance;
};
//# sourceMappingURL=xata.js.map